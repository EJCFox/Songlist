service: songlist

provider:
    name: aws
    runtime: nodejs12.x
    profile: Songlist
    region: eu-west-2
    lambdaHashingVersion: 20201221
    environment:
        usersTableName: ${self:custom.usersTableName}
        songQueueTableName: ${self:custom.songQueueTableName}
        songListTableName: ${self:custom.songListTableName}
        songHistoryTableName: ${self:custom.songHistoryTableName}
    iam:
        role:
            statements:
                - Effect: Allow
                  Action:
                      - dynamodb:*
                  Resource: '*'

custom:
    usersTableName: WebsocketUsers
    songQueueTableName: SongQueue
    songListTableName: SongList
    songHistoryTableName: SongHistory

functions:
    websocket-connect:
        handler: lambdas/websockets/connect.handler
        events:
            - websocket:
                  route: $connect
    websocket-disconnect:
        handler: lambdas/websockets/disconnect.handler
        events:
            - websocket:
                  route: $disconnect
    websocket-default:
        handler: lambdas/websockets/default.handler
        events:
            - websocket:
                  route: $default
    websocket-queue-add:
        handler: lambdas/websockets/queueAdd.handler
        events:
            - websocket:
                  route: queueAdd
    websocket-list-add:
        handler: lambdas/websockets/listAdd.handler
        events:
            - websocket:
                  route: listAdd

resources:
    Resources:
        WebsocketUserTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.usersTableName}
                AttributeDefinitions:
                    - AttributeName: ID
                      AttributeType: S
                KeySchema:
                    - AttributeName: ID
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
        SongListTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.songListTableName}
                AttributeDefinitions:
                    - AttributeName: ID
                      AttributeType: S
                KeySchema:
                    - AttributeName: ID
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
        SongQueueTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.songQueueTableName}
                AttributeDefinitions:
                    - AttributeName: SongID
                      AttributeType: S
                KeySchema:
                    - AttributeName: SongID
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
        SongHistoryTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.songHistoryTableName}
                AttributeDefinitions:
                    - AttributeName: SongID
                      AttributeType: S
                    - AttributeName: Timestamp
                      AttributeType: S
                KeySchema:
                    - AttributeName: SongID
                      KeyType: HASH
                    - AttributeName: Timestamp
                      KeyType: RANGE
                BillingMode: PAY_PER_REQUEST
    